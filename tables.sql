DROP TABLE if exists Hospital CASCADE;
DROP TABLE if exists Bed_Contain CASCADE;
DROP TABLE if exists Staff_Employee CASCADE;
DROP TABLE if exists Doctor_Employee CASCADE;
DROP TABLE if exists Nurse_Employee CASCADE;
DROP TABLE if exists Nurse_Supervise CASCADE;
DROP TABLE if exists Patient CASCADE;
DROP TABLE if exists Guardian CASCADE;
DROP TABLE if exists Health_Record CASCADE;
DROP TABLE if exists Insurance CASCADE;
DROP TABLE if exists Coverage CASCADE;
DROP TABLE if exists Assign CASCADE;
DROP TABLE if exists Shift CASCADE;
DROP TABLE if exists Take_Care CASCADE;
DROP TABLE if exists Test_Order CASCADE;
DROP TABLE if exists Test_Lab CASCADE;

SET datestyle = ymd;
show datestyle;

CREATE TABLE Hospital(
    hospital_id int GENERATED BY DEFAULT AS IDENTITY,
    address int NOT NULL UNIQUE,
    name int NOT NULL UNIQUE,
    tel int NOT NULL UNIQUE,
    capacity int NOT NULL
);
GRANT SELECT ON Hospital TO public;
ADD CONSTRAINT PK_Hospital PRIMARY KEY (hospital_id);

CREATE TABLE Health_Record(
    record_ID VARCHAR(10) PRIMARY KEY,
    drug_taken VARCHAR(50),
    food_allergy VARCHAR(50)
);
GRANT SELECT ON Health_Record TO public;

CREATE TABLE Guardian(
    contact_info VARCHAR(40),
    name VARCHAR(40),
    relationship VARCHAR(20),
    PRIMARY KEY (contact_info, name)
);
GRANT SELECT ON Guardian TO public;

CREATE TABLE Coverage(
    insurance_ID VARCHAR(10) PRIMARY KEY,
    amount REAL
);
GRANT SELECT ON COVERAGE TO PUBLIC;

CREATE TABLE Bed_Contain(
    hospital_ID VARCHAR(10),
    bed_num VARCHAR(10),
    building VARCHAR(10) NOT NULL,
    PRIMARY KEY (hospital_ID, building, bed_num),
    FOREIGN KEY (hospital_ID) REFERENCES Hospital(hospital_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
GRANT SELECT ON Bed_Contain TO public;

CREATE TABLE Staff_Employee(
    hospital_ID VARCHAR(10),
    employee_ID VARCHAR(10),
    name VARCHAR(40) NOT NULL,
    pager VARCHAR(40),
    start_date DATE NOT NULL,
    PRIMARY KEY (hospital_ID, employee_ID),
    FOREIGN KEY (hospital_ID) REFERENCES Hospital(hospital_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
GRANT SELECT ON Staff_Employee TO public;

CREATE TABLE Doctor_Employee(
    hospital_ID VARCHAR(10),
    doctor_ID VARCHAR(10),
    specialization VARCHAR(40),
    PRIMARY KEY (hospital_ID, doctor_ID),
    FOREIGN KEY (hospital_ID, doctor_ID) REFERENCES Staff_Employee(hospital_ID, employee_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
GRANT SELECT ON Doctor_Employee TO public;

CREATE TABLE Nurse_Employee(
    hospital_ID VARCHAR(10),
    nurse_ID VARCHAR(10),
    PRIMARY KEY (hospital_ID, nurse_ID),
    FOREIGN KEY (hospital_ID, nurse_ID) REFERENCES Staff_Employee(hospital_ID, employee_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
GRANT SELECT ON Nurse_Employee TO public;

CREATE TABLE Nurse_Supervise(
    hospital_ID VARCHAR(10),
    supervisee_ID VARCHAR(10),
    supervisor_ID VARCHAR(10),
    PRIMARY KEY (hospital_ID, supervisee_ID),
    FOREIGN KEY (hospital_ID, supervisee_ID) REFERENCES Nurse_Employee(hospital_ID, nurse_ID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (hospital_ID, supervisor_ID) REFERENCES Nurse_Employee(hospital_ID, nurse_ID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
GRANT SELECT ON Nurse_Supervise TO public;

CREATE TABLE Patient(
    patient_ID VARCHAR(10) PRIMARY KEY,
    hospital_ID VARCHAR(10),
    doctor_ID VARCHAR(10),
    building VARCHAR(10),
    bed_num VARCHAR(10),
    record_ID VARCHAR(10) NOT NULL UNIQUE,
    alive BOOLEAN,
    name VARCHAR(40),
    birthday DATE,
    sex BOOLEAN,
    height REAL,
    weight REAL,
    address VARCHAR(40),
    designate_start_date DATE,
    occupy_start_date DATE,
    UNIQUE (hospital_ID,building, bed_num),
    FOREIGN KEY (hospital_ID, doctor_ID) REFERENCES Doctor_Employee(hospital_ID, doctor_ID)
        ON DELETE SET NULL ON UPDATE CASCADE ,
    FOREIGN KEY (record_ID) REFERENCES Health_Record(record_ID) ON DELETE SET NULL ON UPDATE CASCADE ,
    FOREIGN KEY (hospital_ID, building, bed_num) REFERENCES Bed_Contain(hospital_ID, building, bed_num)
        ON DELETE SET NULL ON UPDATE CASCADE
);
GRANT SELECT ON Patient TO public;

CREATE TABLE Shift(
    start_shift_time TIME PRIMARY KEY,
    shift_duration INTEGER
);
GRANT SELECT ON Shift TO public;

CREATE TABLE Insurance(
    insurance_ID VARCHAR(10),
    patient_ID VARCHAR(10),
    expiration_date DATE,
    PRIMARY KEY (patient_ID, insurance_ID),
    FOREIGN KEY (patient_ID) REFERENCES Patient(patient_ID)
        ON DELETE CASCADE ON UPDATE CASCADE ,
    FOREIGN KEY (insurance_ID) REFERENCES Coverage(insurance_ID)
);
GRANT SELECT ON Insurance TO public;

CREATE TABLE Assign(
    patient_ID VARCHAR(10),
    hospital_ID VARCHAR(10),
    nurse_ID VARCHAR(10),
    start_shift_time TIME,
    PRIMARY KEY (patient_ID, hospital_ID, nurse_ID),
    FOREIGN KEY (patient_ID) REFERENCES Patient(patient_ID) ON DELETE CASCADE ON UPDATE CASCADE ,
    FOREIGN KEY (hospital_ID, nurse_ID) REFERENCES Nurse_Employee(hospital_ID, nurse_ID) ON DELETE CASCADE ON UPDATE CASCADE ,
    FOREIGN KEY (start_shift_time) REFERENCES Shift(start_shift_time) ON DELETE SET NULL ON UPDATE CASCADE
);
GRANT SELECT ON Assign TO public;

CREATE TABLE Take_Care(
    patient_ID VARCHAR(10),
    contact_info VARCHAR(40),
    name VARCHAR(40),
    PRIMARY KEY (patient_ID, contact_info, name),
    FOREIGN KEY (patient_ID) REFERENCES Patient(patient_ID)
        ON DELETE SET NULL ON UPDATE CASCADE ,
    FOREIGN KEY (contact_info, name) REFERENCES Guardian(contact_info, name)
        ON DELETE SET NULL ON UPDATE CASCADE
);
GRANT SELECT ON Take_Care TO public;

create table Test_Lab(
    name VARCHAR(10) PRIMARY KEY,
    test_method VARCHAR(20)
);
GRANT SELECT on test_lab to PUBLIC;

CREATE TABLE Test_Order(
    test_ID VARCHAR(10) PRIMARY KEY,
    patient_ID VARCHAR(10),
    hospital_ID VARCHAR(10),
    doctor_ID VARCHAR(10),
    positive BOOLEAN,
    test_date DATE,
    test_lab VARCHAR(15),
    FOREIGN KEY (test_lab) REFERENCES Test_Lab(name),
    FOREIGN KEY (hospital_ID, doctor_ID) REFERENCES Doctor_Employee(hospital_ID, doctor_ID) ON DELETE SET NULL ON UPDATE CASCADE ,
    FOREIGN KEY (patient_ID) REFERENCES Patient(patient_ID)
        ON DELETE SET NULL ON UPDATE CASCADE
);
GRANT SELECT ON Test_Order TO public;